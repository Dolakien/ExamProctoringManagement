// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ExamProctoringManagement.Data.Models;

public partial class ExamProctoringManagementDBContext : DbContext
{
    public ExamProctoringManagementDBContext(DbContextOptions<ExamProctoringManagementDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Exam> Exams { get; set; }

    public virtual DbSet<FormSlot> FormSlots { get; set; }

    public virtual DbSet<FormSwap> FormSwaps { get; set; }

    public virtual DbSet<Group> Groups { get; set; }

    public virtual DbSet<GroupRoom> GroupRooms { get; set; }

    public virtual DbSet<ProctoringSchedule> ProctoringSchedules { get; set; }

    public virtual DbSet<RefreshToken> RefreshTokens { get; set; }

    public virtual DbSet<RegistrationForm> RegistrationForms { get; set; }

    public virtual DbSet<Report> Reports { get; set; }

    public virtual DbSet<Role> Roles { get; set; }

    public virtual DbSet<Room> Rooms { get; set; }

    public virtual DbSet<Semester> Semesters { get; set; }

    public virtual DbSet<Slot> Slots { get; set; }

    public virtual DbSet<SlotReference> SlotReferences { get; set; }

    public virtual DbSet<SlotRoomSubject> SlotRoomSubjects { get; set; }

    public virtual DbSet<Subject> Subjects { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Exam>(entity =>
        {
            entity.HasKey(e => e.ExamId).HasName("PK__Exam__297521A73FCADAFD");

            entity.ToTable("Exam");

            entity.Property(e => e.ExamId)
                .HasMaxLength(20)
                .HasColumnName("ExamID");
            entity.Property(e => e.ExamName).HasMaxLength(50);
            entity.Property(e => e.FromDate).HasPrecision(6);
            entity.Property(e => e.SemesterId)
                .HasMaxLength(20)
                .HasColumnName("SemesterID");
            entity.Property(e => e.ToDate).HasPrecision(6);
            entity.Property(e => e.Type)
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.HasOne(d => d.Semester).WithMany(p => p.Exams)
                .HasForeignKey(d => d.SemesterId)
                .HasConstraintName("FK__Exam__SemesterID__5629CD9C");
        });

        modelBuilder.Entity<FormSlot>(entity =>
        {
            entity.HasKey(e => e.FormSlotId).HasName("PK__FormSlot__EDD09F51DE9A482D");

            entity.ToTable("FormSlot");

            entity.Property(e => e.FormSlotId)
                .HasMaxLength(20)
                .HasColumnName("FormSlotID");
            entity.Property(e => e.FormId)
                .HasMaxLength(20)
                .HasColumnName("FormID");
            entity.Property(e => e.SlotId)
                .HasMaxLength(20)
                .HasColumnName("SlotID");

            entity.HasOne(d => d.Form).WithMany(p => p.FormSlots)
                .HasForeignKey(d => d.FormId)
                .HasConstraintName("FK__FormSlot__FormID__6FE99F9F");

            entity.HasOne(d => d.Slot).WithMany(p => p.FormSlots)
                .HasForeignKey(d => d.SlotId)
                .HasConstraintName("FK__FormSlot__SlotID__5812160E");
        });

        modelBuilder.Entity<FormSwap>(entity =>
        {
            entity.HasKey(e => e.FormId).HasName("PK__FormSwap__FB05B7BD856EF62E");

            entity.ToTable("FormSwap");

            entity.Property(e => e.FormId)
                .HasMaxLength(20)
                .HasColumnName("FormID");
            entity.Property(e => e.CreateDate).HasPrecision(6);
            entity.Property(e => e.FromSlot).HasMaxLength(20);
            entity.Property(e => e.ToSlot).HasMaxLength(20);
            entity.Property(e => e.UserId)
                .HasMaxLength(20)
                .HasColumnName("UserID");

            entity.HasOne(d => d.FromSlotNavigation).WithMany(p => p.FormSwapFromSlotNavigations)
                .HasForeignKey(d => d.FromSlot)
                .HasConstraintName("FK__FormSwap__FromSl__6C190EBB");

            entity.HasOne(d => d.ToSlotNavigation).WithMany(p => p.FormSwapToSlotNavigations)
                .HasForeignKey(d => d.ToSlot)
                .HasConstraintName("FK__FormSwap__ToSlot__6D0D32F4");

            entity.HasOne(d => d.User).WithMany(p => p.FormSwaps)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__FormSwap__UserID__66603565");
        });

        modelBuilder.Entity<Group>(entity =>
        {
            entity.HasKey(e => e.GroupId).HasName("PK__Group__149AF30AAE35489B");

            entity.ToTable("Group");

            entity.Property(e => e.GroupId)
                .HasMaxLength(20)
                .HasColumnName("GroupID");
        });

        modelBuilder.Entity<GroupRoom>(entity =>
        {
            entity.HasKey(e => e.GroupRoomId).HasName("PK__GroupRoo__EE8728507C1D6653");

            entity.ToTable("GroupRoom");

            entity.Property(e => e.GroupRoomId)
                .HasMaxLength(20)
                .HasColumnName("GroupRoomID");
            entity.Property(e => e.GroupId)
                .HasMaxLength(20)
                .HasColumnName("GroupID");
            entity.Property(e => e.RoomId)
                .HasMaxLength(20)
                .HasColumnName("RoomID");

            entity.HasOne(d => d.Group).WithMany(p => p.GroupRooms)
                .HasForeignKey(d => d.GroupId)
                .HasConstraintName("FK_GroupRoom_Group");

            entity.HasOne(d => d.Room).WithMany(p => p.GroupRooms)
                .HasForeignKey(d => d.RoomId)
                .HasConstraintName("FK_GroupRoom_Room");
        });

        modelBuilder.Entity<ProctoringSchedule>(entity =>
        {
            entity.HasKey(e => e.ScheduleId).HasName("PK__Proctori__9C8A5B69FCE55FD0");

            entity.ToTable("ProctoringSchedule");

            entity.Property(e => e.ScheduleId)
                .HasMaxLength(20)
                .HasColumnName("ScheduleID");
            entity.Property(e => e.ProctorType).HasMaxLength(20);
            entity.Property(e => e.SlotReferenceId)
                .HasMaxLength(20)
                .HasColumnName("SlotReferenceID");
            entity.Property(e => e.UserId)
                .HasMaxLength(20)
                .HasColumnName("UserID");

            entity.HasOne(d => d.SlotReference).WithMany(p => p.ProctoringSchedules)
                .HasForeignKey(d => d.SlotReferenceId)
                .HasConstraintName("FK__Proctorin__SlotR__5DCAEF64");

            entity.HasOne(d => d.User).WithMany(p => p.ProctoringSchedules)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Proctorin__UserI__6E01572D");
        });

        modelBuilder.Entity<RefreshToken>(entity =>
        {
            entity.HasKey(e => e.RefreshTokenId).HasName("PK__RefreshT__F5845E59EB5325A6");

            entity.ToTable("RefreshToken");

            entity.Property(e => e.RefreshTokenId).HasColumnName("RefreshTokenID");
            entity.Property(e => e.ExpiryDate).HasColumnType("datetime");
            entity.Property(e => e.Token)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.UserId)
                .IsRequired()
                .HasMaxLength(20)
                .HasColumnName("UserID");

            entity.HasOne(d => d.User).WithMany(p => p.RefreshTokens)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__RefreshTo__UserI__5FB337D6");
        });

        modelBuilder.Entity<RegistrationForm>(entity =>
        {
            entity.HasKey(e => e.FormId).HasName("PK__Registra__FB05B7BD629F13AA");

            entity.ToTable("RegistrationForm");

            entity.Property(e => e.FormId)
                .HasMaxLength(20)
                .HasColumnName("FormID");
            entity.Property(e => e.CreateDate).HasPrecision(6);
            entity.Property(e => e.UserId)
                .HasMaxLength(20)
                .HasColumnName("UserID");

            entity.HasOne(d => d.User).WithMany(p => p.RegistrationForms)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Registrat__UserI__656C112C");
        });

        modelBuilder.Entity<Report>(entity =>
        {
            entity.HasKey(e => e.ReportId).HasName("PK__Report__D5BD48E5D60E9024");

            entity.ToTable("Report");

            entity.Property(e => e.ReportId)
                .HasMaxLength(20)
                .HasColumnName("ReportID");
            entity.Property(e => e.FromDate).HasPrecision(6);
            entity.Property(e => e.ToDate).HasPrecision(6);
            entity.Property(e => e.TotalAmount).HasColumnType("numeric(38, 2)");
            entity.Property(e => e.UnitPerHour).HasColumnType("numeric(38, 2)");
            entity.Property(e => e.UserId)
                .HasMaxLength(20)
                .HasColumnName("UserID");

            entity.HasOne(d => d.User).WithMany(p => p.Reports)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Report__UserID__6EF57B66");
        });

        modelBuilder.Entity<Role>(entity =>
        {
            entity.HasKey(e => e.RoleId).HasName("PK__Role__8AFACE3A676D433A");

            entity.ToTable("Role");

            entity.Property(e => e.RoleId)
                .ValueGeneratedNever()
                .HasColumnName("RoleID");
            entity.Property(e => e.RoleDescription).HasMaxLength(255);
            entity.Property(e => e.RoleName).HasMaxLength(50);
        });

        modelBuilder.Entity<Room>(entity =>
        {
            entity.HasKey(e => e.RoomId).HasName("PK__Room__3286391930794DFF");

            entity.ToTable("Room");

            entity.Property(e => e.RoomId)
                .HasMaxLength(20)
                .HasColumnName("RoomID");
            entity.Property(e => e.RoomName).HasMaxLength(50);
        });

        modelBuilder.Entity<Semester>(entity =>
        {
            entity.HasKey(e => e.SemesterId).HasName("PK__Semester__043301BD4AA7DBC4");

            entity.ToTable("Semester");

            entity.Property(e => e.SemesterId)
                .HasMaxLength(20)
                .HasColumnName("SemesterID");
            entity.Property(e => e.FromDate).HasPrecision(6);
            entity.Property(e => e.SemesterName).HasMaxLength(50);
            entity.Property(e => e.ToDate).HasPrecision(6);
        });

        modelBuilder.Entity<Slot>(entity =>
        {
            entity.HasKey(e => e.SlotId).HasName("PK__Slot__0A124A4FCDF10C29");

            entity.ToTable("Slot");

            entity.Property(e => e.SlotId)
                .HasMaxLength(20)
                .HasColumnName("SlotID");
            entity.Property(e => e.Date).HasPrecision(6);
            entity.Property(e => e.ExamId)
                .HasMaxLength(20)
                .HasColumnName("ExamID");

            entity.HasOne(d => d.Exam).WithMany(p => p.Slots)
                .HasForeignKey(d => d.ExamId)
                .HasConstraintName("FK__Slot__ExamID__628FA481");
        });

        modelBuilder.Entity<SlotReference>(entity =>
        {
            entity.HasKey(e => e.SlotReferenceId).HasName("PK__SlotRefe__E569EEA9EC86CEEC");

            entity.ToTable("SlotReference");

            entity.Property(e => e.SlotReferenceId)
                .HasMaxLength(20)
                .HasColumnName("SlotReferenceID");
            entity.Property(e => e.GroupId)
                .HasMaxLength(20)
                .HasColumnName("GroupID");
            entity.Property(e => e.RoomId)
                .HasMaxLength(20)
                .HasColumnName("RoomID");
            entity.Property(e => e.SlotId)
                .HasMaxLength(20)
                .HasColumnName("SlotID");

            entity.HasOne(d => d.Group).WithMany(p => p.SlotReferences)
                .HasForeignKey(d => d.GroupId)
                .HasConstraintName("FK_SlotReference_Group");

            entity.HasOne(d => d.Room).WithMany(p => p.SlotReferences)
                .HasForeignKey(d => d.RoomId)
                .HasConstraintName("FK_SlotReference_Room");

            entity.HasOne(d => d.Slot).WithMany(p => p.SlotReferences)
                .HasForeignKey(d => d.SlotId)
                .HasConstraintName("FK__SlotRefer__SlotI__6383C8BA");
        });

        modelBuilder.Entity<SlotRoomSubject>(entity =>
        {
            entity.HasKey(e => e.SlotRoomSubjectId).HasName("PK__SlotRoom__19C36CC2C112BEFA");

            entity.ToTable("SlotRoomSubject");

            entity.Property(e => e.SlotRoomSubjectId)
                .HasMaxLength(20)
                .HasColumnName("SlotRoomSubjectID");
            entity.Property(e => e.SlotReferenceId)
                .HasMaxLength(20)
                .HasColumnName("SlotReferenceID");
            entity.Property(e => e.SubjectId)
                .HasMaxLength(20)
                .HasColumnName("SubjectID");

            entity.HasOne(d => d.SlotReference).WithMany(p => p.SlotRoomSubjects)
                .HasForeignKey(d => d.SlotReferenceId)
                .HasConstraintName("FK__SlotRoomS__SlotR__66603565");

            entity.HasOne(d => d.Subject).WithMany(p => p.SlotRoomSubjects)
                .HasForeignKey(d => d.SubjectId)
                .HasConstraintName("FK__SlotRoomS__Subje__6754599E");
        });

        modelBuilder.Entity<Subject>(entity =>
        {
            entity.HasKey(e => e.SubjectId).HasName("PK__Subject__AC1BA388B18D72B6");

            entity.ToTable("Subject");

            entity.Property(e => e.SubjectId)
                .HasMaxLength(20)
                .HasColumnName("SubjectID");
            entity.Property(e => e.ExamId)
                .HasMaxLength(20)
                .HasColumnName("ExamID");
            entity.Property(e => e.SubjectName).HasMaxLength(50);

            entity.HasOne(d => d.Exam).WithMany(p => p.Subjects)
                .HasForeignKey(d => d.ExamId)
                .HasConstraintName("FK__Subject__ExamID__68487DD7");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__User__1788CCACE5F13170");

            entity.ToTable("User");

            entity.Property(e => e.UserId)
                .HasMaxLength(20)
                .HasColumnName("UserID");
            entity.Property(e => e.Address).HasMaxLength(100);
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.FullName).HasMaxLength(50);
            entity.Property(e => e.MainMajor).HasMaxLength(50);
            entity.Property(e => e.PasswordHash)
                .IsRequired()
                .HasMaxLength(128);
            entity.Property(e => e.PasswordSalt)
                .IsRequired()
                .HasMaxLength(128);
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(12)
                .IsUnicode(false);
            entity.Property(e => e.RoleId).HasColumnName("RoleID");
            entity.Property(e => e.UserName).HasMaxLength(50);

            entity.HasOne(d => d.Role).WithMany(p => p.Users)
                .HasForeignKey(d => d.RoleId)
                .HasConstraintName("FK__User__RoleID__6477ECF3");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}